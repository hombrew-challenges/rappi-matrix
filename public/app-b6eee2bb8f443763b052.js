webpackJsonp([0],[,,,,,,,function(t,n){},function(t,n){},function(t,n){},function(t,n,e){function i(){}t.exports={template:e(33),controllerAs:"rm",controller:i,bindings:{dismiss:"&"}},i.prototype={cancel:function(){this.dismiss()}}},function(t,n,e){function i(t){var n=this;t.$watch("oi.value",function(){n.changecurrentoperation()}),t.$watch("oi.n",function(t){n.value>t&&"W"!==n.placeholder&&(n.value=t)})}t.exports={template:e(34),controllerAs:"oi",controller:i,bindings:{placeholder:"<",n:"<",value:"=",changecurrentoperation:"="}},i.$inject=["$scope"]},function(t,n,e){function i(){function t(){var t;for(n.operation=n.activeOption,t=0;t<n.value.length;t++)n.operation+=" "+n.value[t]}var n=this;n.activeOption="UPDATE",n.placeholders=["x","y","z","W"],n.value=[1,1,1,0],n.changeCurrentOperation=t}t.exports={template:e(35),controllerAs:"op",controller:i,bindings:{operation:"=",n:"=",tcindex:"<",opindex:"<"}},i.$inject=[],i.prototype={changeActiveOption:function(t){this.activeOption=t,"UPDATE"===this.activeOption?(this.placeholders=["x","y","z","W"],this.value=[1,1,1,0]):(this.placeholders=["x1","y1","z1","x2","y2","z2"],this.value=[1,1,1,1,1,1]),this.changeCurrentOperation()}}},function(t,n,e){function i(){}t.exports={template:e(36),controllerAs:"rm",controller:i,bindings:{resolve:"<",close:"&",dismiss:"&"}},i.prototype={ok:function(){this.close()},cancel:function(){this.dismiss()}}},function(t,n,e){function i(t){var n=this;t.$watch("tc.testcase.m",function(t,e){var i;if(o.isUndefined(e)||t===e)for(i=0;i<t;i++)n.testcase.operations.push("");else if(t>e){var s=t-e;for(i=0;i<s;i++)n.testcase.operations.push("")}else t<e&&n.testcase.operations.splice(t,e-t)})}var o=e(1);t.exports={template:e(37),controllerAs:"tc",controller:i,bindings:{testcase:"=",index:"<"}},i.$inject=["$scope"]},function(t,n,e){function i(t,n,e,i){var s=this;s.toastr=n,s.$http=e,s.$uibModal=i,s.testcaseQuantity=1,s.testcases=[],s.disabledSubmit=!1,t.$watch("mn.testcaseQuantity",function(t,n){var e;if(o.isUndefined(n)||t===n)for(e=0;e<t;e++)s.testcases.push({n:1,m:1,operations:[]});else if(t>n){var i=t-n;for(e=0;e<i;e++)s.testcases.push({n:1,m:1,operations:[]})}else t<n&&s.testcases.splice(t,n-t)})}var o=e(1);t.exports={template:e(38),controllerAs:"mn",controller:i},i.$inject=["$scope","toastr","$http","$uibModal"],i.prototype={submit:function(){var t=!0,n=this;(o.isUndefined(this.testcaseQuantity)||null===this.testcaseQuantity||this.testcaseQuantity<1)&&(t=!1),this.testcases.forEach(function(n){(o.isUndefined(n.n)||null===n.n)&&(t=!1),(o.isUndefined(n.m)||null===n.m)&&(t=!1),n.operations.forEach(function(n){n.search("undefined")===-1&&n.search("null")===-1||(t=!1)})}),t===!1?this.toastr.warning("fill the form to proceed","Warning"):(this.disabledSubmit=!0,this.$http.post("http://rappi-matrix.herokuapp.com/api/testcases",{testcases:n.testcases}).then(function(t){n.disabledSubmit=!1;var e=n.$uibModal.open({animation:!0,component:"riResponseModal",resolve:{results:function(){return t.data}}});e.result.then(function(){n.testcaseQuantity=1,n.testcases=[],n.testcases.push({n:1,m:1,operations:["UPDATE 1 1 1 0"]})})},function(t){n.disabledSubmit=!1,n.toastr.error(t,"Error")}))},openInstructionsModal:function(){this.$uibModal.open({animation:!0,component:"riInstructionsModal"})}}},function(t,n){function e(t,n,e){e.html5Mode(!0).hashPrefix("!"),n.otherwise("/"),t.state("main",{url:"/",component:"main"})}e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"],t.exports=e},,,,,,,,,,,,,,,,,function(t,n){t.exports='<div class="modal-header">\n  <h3 class="modal-title" id="modal-title">Instructions for <b>Cube Summation</b></h3>\n</div>\n\n<div class="modal-body" id="modal-body">\n\t<div class="content">\n\t\tYou are given a 3-D Matrix in which each block contains 0 initially. The first block is defined by the coordinate (1,1,1) and the last block is defined by the coordinate (N,N,N). There are two types of queries:<br/>\n\t\t<code>UPDATE x y z W</code> updates the value of block (x,y,z) to W.<br/>\n\t\t<code>QUERY x1 y1 z1 x2 y2 z2</code> calculates the sum of the value of blocks whose x coordinate is between x1 and x2 (inclusive), y coordinate between y1 and y2 (inclusive) and z coordinate between z1 and z2 (inclusive).<br/>\n\t\t<b>Input Format</b> <br/>\n\t\tThe first line contains an integer T (Testcases Quantity), the number of test-cases. T testcases follow. For each test case, the first line will contain two integers N (Matrix Side Length) and M (Operation Quantity) separated by a single space.<br/>\n\t\tN defines the N * N * N matrix.<br/>\n\t\tM defines the number of operations.<br/>\n\t\tThe next M lines will contain either<br/>\n\t\t<code>\n\t\t\t<ol>\n\t\t\t\t<li>UPDATE x y z W</li>\n\t\t\t\t<li>QUERY  x1 y1 z1 x2 y2 z2 </li>\n\t\t\t</ol>\n\t\t</code>\n\t\t<b>Output Format</b> <br/>\n\t\tPrint the result for each QUERY.\n\t</div>\n</div>\n\n<div class="modal-footer instructions-modal-footer">\n  <button class="btn btn-warning" type="button" ng-click="rm.cancel()">Close</button>\n</div>\n'},function(t,n){t.exports='<input\n  placeholder="{{oi.placeholder}}"\n  type="number"\n  min="{{ oi.placeholder !== \'W\' ? 1 : 0 }}"\n  max="{{ oi.placeholder !== \'W\' ? oi.n : \'\' }}"\n  class="form-control"\n  aria-label="..."\n  style="width:65px;"\n  ng-model="oi.value"\n  >\n'},function(t,n){t.exports='<div class="col-xs-12 col-sm-10 col-sm-offset-2">\n  <div class="input-group">\n\n    <div class="input-group-btn" uib-dropdown is-open="status.isopen">\n      <button id="db-{{op.tcindex}}-{{op.opindex}}" type="button" class="btn btn-primary operation-dropdown-button" uib-dropdown-toggle ng-disabled="disabled">\n        {{op.activeOption}} <span class="caret"></span>\n      </button>\n      <ul class="dropdown-menu" uib-dropdown-menu role="menu" aria-labelledby="db-{{op.tcindex}}-{{op.opindex}}">\n        <li role="menuitem" ng-click="op.changeActiveOption(\'UPDATE\')" ng-if="op.activeOption !== \'UPDATE\'"><a>UPDATE</a></li>\n        <li role="menuitem" ng-click="op.changeActiveOption(\'QUERY\')" ng-if="op.activeOption !== \'QUERY\'"><a>QUERY</a></li>\n      </ul>\n    </div>\n\n    <ri-op-input\n      ng-repeat="placeholder in op.placeholders track by $index"\n      n="op.n"\n      placeholder="placeholder"\n      value="op.value[$index]"\n      changecurrentoperation="op.changeCurrentOperation"\n      >\n    </ri-op-input>\n  </div>\n</div>\n'},function(t,n){t.exports='<div class="modal-header">\n  <h3 class="modal-title" id="modal-title">Testcases Results</h3>\n</div>\n\n<div class="modal-body" id="modal-body">\n  <div ng-repeat="result in rm.resolve.results track by $index">\n    Testcase {{$index + 1}} query operations results\n    <ul class="list-group">\n      <li class="list-group-item" ng-repeat="testcase in result track by $index">{{testcase}}</li>\n    </ul>\n    <br>\n  </div>\n</div>\n\n<div class="modal-footer">\n  <button class="btn btn-primary" type="button" ng-click="rm.ok()">Start Again</button>\n  <button class="btn btn-warning" type="button" ng-click="rm.cancel()">Edit Request</button>\n</div>\n'},function(t,n){t.exports='<br/>\n\n<div class="form-horizontal">\n\n  <div class="form-group">\n    <label for="matrixSideLength" class="col-xs-3 control-label">Matrix Side Length</label>\n    <div class="col-xs-9">\n      <input\n        id="matrixSideLength"\n        type="number"\n        min="1"\n        class="form-control"\n        placeholder="N"\n        ng-model="tc.testcase.n">\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label for="operationQuantity" class="col-xs-3 control-label">Operation Quantity</label>\n    <div class="col-xs-9">\n      <input\n        id="operationQuantity"\n        type="number"\n        min="1"\n        class="form-control"\n        placeholder="M"\n        ng-model="tc.testcase.m">\n    </div>\n  </div>\n\n</div>\n\n\n<div\n  class="rioperation"\n  ng-if="tc.testcase.operations"\n  ng-repeat="currentOperation in tc.testcase.operations track by $index"\n  >\n  <ri-operation\n    operation="tc.testcase.operations[$index]"\n    n="tc.testcase.n"\n    tcindex="tc.index"\n    opindex="$index"\n    >\n  </ri-operation>\n\n  <div style="clear: both"></div>\n</div>\n'},function(t,n){t.exports='<div class="full-width" ng-if="mn.disabledSubmit">\n\t<div class="loader-container">\n\t\t<div class="loader-wrapper">\n\t\t\t<div class="loader"></div>\n\t\t</div>\n\t</div>\n</div>\n\n<div class="container">\n\n\t<img class="logo img-responsive" src="/assets/images/rappi-logo.png" alt="logo" />\n\n\n  <div class="col-xs-12 col-md-10 col-md-offset-1">\n\t\t<div class="text-right">\n\t\t\t<button type="button" class="btn btn-success instructions-button" ng-click="mn.openInstructionsModal()">Instructions</button>\n\t\t</div>\n    <form ng-submit="mn.submit()">\n\n      <div class="row">\n        <div class="form-group">\n          <label for="testcaseQuantity">Testcases Quantity</label>\n          <input\n            id="testcaseQuantity"\n            type="number"\n            min="1"\n            class="form-control"\n            placeholder="Testcases Quantity"\n            ng-model="mn.testcaseQuantity"\n            />\n        </div>\n      </div>\n\n      <div class="row">\n        <ul class="list-group"ng-if="mn.testcases">\n          <li class="list-group-item testcase-list-item" ng-repeat="currentTestcase in mn.testcases track by $index">\n            Testcase {{$index + 1}}\n            <br/>\n            <ri-testcase testcase="currentTestcase" index="$index"></ri-testcase>\n          </li>\n        </ul>\n      </div>\n\n\t\t\t<div class="text-center submit-button-container">\n\t\t\t\t<button type="submit" class="btn btn-success" ng-disabled="mn.disabledSubmit">Submit</button>\n\t\t\t</div>\n    </form>\n  </div>\n\n\n</div>\n'},function(t,n,e){var i=e(1);e(0),e(5),e(4),e(2),e(3);var o=e(16),s=e(15),a=e(14),c=e(12),r=e(11),l=e(13),d=e(10);e(8),e(7),e(9);var u="app";t.exports=u,i.module(u,["ui.router","ui.bootstrap","ngAnimate","toastr"]).config(o).component("main",s).component("riTestcase",a).component("riOperation",c).component("riOpInput",r).component("riResponseModal",l).component("riInstructionsModal",d)}],[39]);